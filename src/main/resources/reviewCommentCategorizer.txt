cosmetic	Should we follow sentence case for display names? Constant name is poor and says nothing about what it means. Ids usually start with lowercase as per camelCaseNotaion. Suggest moving this up with the other Lookups. Suggest removing the comment as well. suggest changing name to Name. Variable name does not make sense. Shouldn't the caption be "some sentence" as you are only adding one at a time? Update name of variable. Someone can get confused. Why are all constants prefixed with "name" . Naming is still poor. Method under test seems to be variable name. So rename this test accordingly. Please rename the method accordingly. Naming inconsistent with type. Please do not use names as filters such as on ENUMS, leave plans etc. For ENUMs always use the full id. For leave plans use something better than short name, which cannot change, uuid or display reference. Name for the upgrade scripts which are procedures should end with *.proc-app.sql. Is this message approved by documentatin team? None of this
                 follow the java naming convention for modifiers. Rename the variable to something short like abc. I know, PQR said that method name is okay, but in my opinion it is really not. Avoid abbreviations like PFL. Java is a typed language. Please do not put Map or List at the end of variable names. Use static import for numbers. provide proper method name.bTest method name is not proper. Use proper name. use java <>. Use java 7 angular brackets. use java <>. Use java 7 angular brackets to avoid setting the type, its easier to read. Here we are talking only about different taste. Its true that its easier to use using static imports. No need to add True or False at the end. This is usually added when we are returning a boolean. Use here 6. Or if you want here a constant, please create a meaningful constant. Again, why you are using this short name. Please change verification message. accepte type. Make all params static. Remove commented code. Use javadoc at proper places. Please do not leave                          Please remove commented code. Remove commented code commented out code.
duplicate	again same question about constants. Again same. Remove java words. again java words. again same. again same as above. Please change as above. duplicate of below. Same as above . Again why refresh on init? Why are we creating new list again here? Same as above. Use Map. Rename as per method under test. Same comments for further occurences. Same comments as above. Keep one space before while(True) and shift the message above while(True). Here is the same. Should you add xyz and xyz require to set time deducted basis to days? Same as above but the false condition. Likely, this can be dropped based on the other comment. Same comment as previous. Same as previous. Again number of parameters is ridiculous.
javacode	I think this change was supposed to be in method.jsp. Why are some things protected? Please make private asthere is no subclass. In my opinion this approach is not a good idea as it ties model to the widget. Why are we not using a frame? Is this being used? Please use static final strings in all columnaptions. abc should not be linked directly to absenceCase. since you are times = 0 we usually use method (variable) instead of (abc). Why are you using method() when you have correct object? What is the point in this private method. It's only used once and has only one sentence. Do we need to wrap this in a new list? Are we modifying the list in this widget? Why are we checking condition when we have qualifiers stored in the widget? Why do have the method() if we are not using it here. Either use the method or remove it.Unsure of point of the method if you are not using it in the widget. Does this needs to be standalone. Can we use Service.method()? Swallowing the exception? Why are we not rethrowing                    A wrapping the e? You have initialized method with default options. Why are you creating anoyher one? When we have more than two checks on a statement it is a good practice moving it to a private method. Verify variable1 is false. Verify variable 2 is false. Consider to change this to empty stage tags from FDP, instead of writing our own. isnt diabled = false the default? Do you need to specify this? is already known. Put this first on the if. No need to query the slp if this is false. Variable && service.method(). extract this to a vraiable and put outside block so that we don't mock enums by accident. Can we create and use immutable list? This can be done using stream and filter. Initialize as Map intead of LinkedHashMap. Make private. Make public. Make final. Make static. Use public. Use private. Use protected. XYZ is unused constant in ABC class. Can you please remove it. In my opinion you don't need this class at all.In my opinion this class's structure, intention and naming needs to be                   reconsidered. I don't really know what this is doing or why it is doing like this? But this is really ugly and I strongly suggest, you should revisit all of this method. Do we need this variable at all? Is this message reused in any other part of the application? Can we do this in just one line? If (Service.method1.method2) {} Here you are passing the actual object to mock, but in earlier method, you are passing new ArrayList. Why this? You have approved the actual time that contains denied days on one or more leave plans . One return per method is the client convention. While it is great that we have now resolved this, with such a simple fix, in my opinion, the simple fix is not in the correct place. We should usethe nicer ways to loops. Some ABC.forEach(pqr-> service.methodName). Is it possible to mock this only once inside init method or before method? Please correct it. nothing seems to be testing. This is happening. Verify XYZ  is false.Why we are creating four tests? we are creating in 
                each one of the leave plan intial version and availability. Cannot be better to initialze in before method? Can we set the time to 0 using DateTime util's setToLowTime() method. Do we have test for this method? What is the point of selected date string variable? It is never set to anything. Why not just return ull from getSelectedDateString() method. This doesn't name any sense. Expected exception is supposed to be used for exceptions thrown out of the ethod under test. Since you are using times = 0 we usually use with instance of classA instead of projected leave request here. Not required. It is already set on leave plan.This verification should be before approval LR Use .with methods and change it one line and remove the rest. Why you copy leave plan? Why the existing leave plan cannot be used? Why you need this plan? Change to one line. Use .with methods. Use method instead of formatting yourself. List is not required here, as we have single leave plan . Is list needed? As there is only on                 e plan. Don't add try catch block as this method is already throwing exception. Don't mention it here. This value gets set in the setup method. Surely you add a third strategy and make it return false to make sure its excluded? Why is this called twice? Service not needed here. In my opinion since this sets just one value, it should be getter and return the value in the same manner as method(). Why are you creating parameters outside the check for if there is an event configured? Same point for the method you copied this code from…please fix both. What is this?! Have you looked at valueObject class? Method() is a method. times=1 everywhere this is called. I think this will impact performance a lot. I think we have two approaches here. The best one from performance point of view is to change this to the moment we create the publication of the takeover case. We cando it because it is a warning message not blocking message. Service.method. I know that it is not yours. bUt looking at the                           implementation of Service.method() it seems that it is not ok. This is only checking a conditio of the leavenplan. It should use Service.method. Please change the method implementation. Method Service.method() is not used anymore….so delete it. Why did add this? It already exists on Service.method() but in a slightly different manner. We should not have two identical methods doing different things. Please talk to whoever added above. In my opinion this should be in one method call and then make method1() and method2() private, or even remove them. Otherwise they will be called independently. There is also a method which Team A added whichdoes not set variable. In my opinion this should not exist. There should be done method that updates both things or similar. This is getting ridiculous. There are approx 14 parameters to the method and the next one. Clearly this should be refactored. I have already got Team A to log jira for this. This change here only makes it worse. Again speak with Team A                   and one of you has to do    this. Based on the fact that you had to add comment to explain this, in my opinion you should not hard code this.This means that the knowledge is in two places. Here and in your new method. In my opinion you should be calling method() even if you know the answer. Since if it changes, it will change in one place. Don't use hard coded values. Remove hard coding. Doesn't do anything. Remove this. This doesn't do anything. Still passes if verification is changed to this: Service.method(); Just call method() and check value. With this change you are assuming that variable is ot a read only list, Notfinal List a safe assumption! Rather than adding to a list you have not created, you should do this instead. Fial List<ABC> variable = arrayList<>(). Service. Method(). This way you own the list. And even method returned a read only list, this would work. Similar to Sachin's commet, but more specific, rather than creating an empty list and adding to it, can you use, final List                 <ABC> list = Arrays.asList(Range.close(variable1,variable2)). Can we apply it to all places.
javadoc		javadoc missing. "Some sentence" is not updated. Your javadoc does not describe why this does this It just redefines the code. Also starting out the javadoc with "some sentence" is incorrect in my opinion. It should be "some sentence" because we wre approving leave request for x reason. Should it be "some sentence" instead? Why do we have absence reasons text in javadoc? What if someday someone decides to change? Can we give a little bit more information here? What about the projected leave request to be progressed. Please change the postion keeping it chronological. javadoc does not make sense. Where does it add or link the qualifiers? no javadoc. What is the "some sentence" supposed the be. javadoc does not look right. Nothing about service aggrement in here. javadoc seems incorrect. There is no occupation title list in the widget. Can we avoid using word "some sentence" everywhere in the javadoc? "some sentence" is not needed. We know that it’s a method. Add a description. I would say                              "some sentence" would be better to specify the behaviour of..Take the oportunite and change "some sentense" to Americal English. Pointless javadoc. Please remove. Please add appropriate verison like 9.2.1.2. Version is missing. Please add correct version. Use plain "some sentence" I think its not a service class. Please update javadoc. "@version" is missing "@author" is missing. Change this to 27 july 2020 as I think you checked in today Please update the comment like excluding historical cases The jira sdescription does not talk regarding deducted time and the basis . Please update the same. Leave request should be in plain English and time decision status should be fine. Change the statuses to status. The javadoc should be "updates deducted time to numeric one and deducted basis value to days for all decision days of the selected leave plans". Please shift the comment before the while loop.active should be in small case? It sets, does it mean query sets, right? NullpointerException is a java                  class name, either use simple (NullPointer) or use proper name to the java class As it is in service, you should not mention that this method is called once. Update the javadoc. Please put space after commas as it is hard to read the versins and jira here. No javadoc update to say that it will store the value as a low time. Selected dates should be updated to have javadoc to say that it is stored as a low time As metioned in the scenario jira - works 40 hours per week (1900 hours per year) Update as metioned above in scenario Suggest removing fullstop in this line for consistency. Make javadoc more proper. Add a javadoc for a class Why is "Some sentence" randomly capitalized? I think the comment is not very accurate. Compensation method is not created.It is set on the occupation. I will put FAB-XXXX "Some sentence" Can you add @see to your fab and add a brief explaination what has changed It should be "some sentence" No explaination on why its always hour if it is about ABC javadoc not                         updated. Still only talks about balance deduction.
junit		Order of method is poor. Init() should be first, as its most important. A is deprecated. Please change tests to be junit5. Why is the init protected? It means that it can't be painted from outside the package Why are we firing refresh in every call of init? Usually a refresh is called on change of something so we can refresh other things Why is the widget also firing the refresh event on init We should not be checking contents of a field here. We should only be firing a refresh event if there are no error validation message Merge those two tests into one Update all tests to be junit5 ( All tests committed in this review) Please cover junit for days also I don't see any test for this condition As discussed please add integration tests for this functionality. 
sqlscript	Row num should be less than or equal to 10000, Rownum<=10000. Either update the comment above to update 999 records or update the query like rowNum<=10000 Why this basis is weeks? From the logic of the batch I see that the requested time that you used, for the set method is in hours basis only. See Service.Method() For what I see in code, the time deducted basis can only be in hours or days depending on the ENUM value. It should be PLSQL block. Not the procedure. Branch name is not correct as the script is committed in xyz branch, which is not pqr, also imo, the script is in wrog folder. Just wondering do you need this Where clause at all? Why not just update all Table objects? Why would a ABC table exist without satisfying this Where clause. The link with the ABC table is missing in the sub query, so the results would not be accurate.